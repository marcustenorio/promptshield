@startuml
!include ./vendor/C4_Container.puml
LAYOUT_WITH_LEGEND()

Person(user, "Usuário")

System_Boundary(ps, "PromptShield") {
  Container(api, "FastAPI App", "Python/FastAPI", "Endpoints /health e /chat, logs.")
  Container(decision, "DecisionEngine", "Python", "Agrega classificadores + Policy (ALLOW/SANITIZE/BLOCK).")
  Container(classifiers, "Classificadores", "Python", "Rule-based (regex) + SBERT (embeddings + cabeça calibrada).")
  Container(sanitizer, "LLMSanitizer", "Python", "Sanitiza prompt (máscara/reescrita).")
  Container(gemini_client, "GeminiClient", "Python google-genai", "Adapter para o LLM.")
  ContainerDb(data, "Data/Models/Logs", "File System", "datasets, models, logs")
}
System_Ext(gemini, "Gemini API", "Google GenAI (v1)")

Rel(user, api, "HTTP /chat")
Rel(api, decision, "evaluate()")
Rel(decision, classifiers, "predict()")
Rel_Back(decision, api, "Decision + votos")
Rel(api, sanitizer, "sanitize() [se preciso]")
Rel(api, gemini_client, "gera resposta")
Rel(gemini_client, gemini, "generateContent()")
Rel(api, data, "logs + leitura/escrita")
Rel(classifiers, data, "carrega artefatos")
Rel(sanitizer, data, "registra metadados (opcional)")

SHOW_LEGEND()
@enduml

